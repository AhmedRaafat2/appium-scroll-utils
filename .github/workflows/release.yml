name: Release to GitHub & Maven Central

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build and package
        run: mvn clean package source:jar javadoc:jar -DskipTests

      - name: Import GPG Key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --yes --import
          gpg --list-keys

      - name: Prepare variables
        id: vars
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          GROUP_PATH="io/github/ahmedraafat2/appium-scroll-utils/$VERSION"
          echo "target_path=target/$GROUP_PATH" >> $GITHUB_OUTPUT

      - name: Create final path and move + sign + checksum
        run: |
          mkdir -p ${{ steps.vars.outputs.target_path }}
          cd target

          VERSION="${{ steps.vars.outputs.VERSION }}"
          FINAL=io/github/ahmedraafat2/appium-scroll-utils/$VERSION

          # Move all needed files
          cp appium-scroll-utils-$VERSION.jar $FINAL/
          cp appium-scroll-utils-$VERSION-javadoc.jar $FINAL/
          cp appium-scroll-utils-$VERSION-sources.jar $FINAL/
          cp ../pom.xml $FINAL/appium-scroll-utils-$VERSION.pom

          cd $FINAL

          # Sign
          for file in *.jar *.pom; do
            gpg --batch --yes --armor --pinentry-mode loopback \
              --passphrase "${{ secrets.GPG_PASSPHRASE }}" \
              --output "$file.asc" --detach-sign "$file"
          done

          # Checksums
          for file in *.jar *.pom; do
            md5sum "$file" > "$file.md5"
            sha1sum "$file" > "$file.sha1"
          done

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.vars.outputs.target_path }}/*

      - name: Create zip bundle
        run: |
          cd target
          zip -r ../central-bundle.zip io

      - name: Upload bundle to Maven Central
        run: |
          curl -u "${{ secrets.MAVEN_CENTRAL_USERNAME }}:${{ secrets.MAVEN_CENTRAL_TOKEN }}" \
            -X POST "https://central.sonatype.com/api/v1/publisher/upload?publishingType=AUTOMATIC" \
            -F "bundle=@central-bundle.zip"
