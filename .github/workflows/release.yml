name: Publish to Maven Central

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Set version and paths
        id: vars
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          ARTIFACT_ID="appium-scroll-utils"
          GROUP_ID="io.github.ahmedraafat2"
          GROUP_PATH=$(echo "$GROUP_ID" | tr '.' '/')
          TARGET_PATH="$GROUP_PATH/$ARTIFACT_ID/$VERSION"

          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "artifact_id=$ARTIFACT_ID" >> "$GITHUB_OUTPUT"
          echo "group_id=$GROUP_ID" >> "$GITHUB_OUTPUT"
          echo "group_path=$GROUP_PATH" >> "$GITHUB_OUTPUT"
          echo "target_path=$TARGET_PATH" >> "$GITHUB_OUTPUT"

      - name: Prepare artifacts
        run: |
          mkdir -p ${{ steps.vars.outputs.target_path }}

          cp target/${{ steps.vars.outputs.artifact_id }}-${{ steps.vars.outputs.version }}.jar ${{ steps.vars.outputs.target_path }}/
          cp target/${{ steps.vars.outputs.artifact_id }}-${{ steps.vars.outputs.version }}-sources.jar ${{ steps.vars.outputs.target_path }}/
          cp target/${{ steps.vars.outputs.artifact_id }}-${{ steps.vars.outputs.version }}-javadoc.jar ${{ steps.vars.outputs.target_path }}/
          cp pom.xml ${{ steps.vars.outputs.target_path }}/${{ steps.vars.outputs.artifact_id }}-${{ steps.vars.outputs.version }}.pom

      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --yes --import
          gpg --list-secret-keys

      - name: Sign + checksum files
        run: |
          FILES=(
            "${{ steps.vars.outputs.artifact_id }}-${{ steps.vars.outputs.version }}.jar"
            "${{ steps.vars.outputs.artifact_id }}-${{ steps.vars.outputs.version }}-sources.jar"
            "${{ steps.vars.outputs.artifact_id }}-${{ steps.vars.outputs.version }}-javadoc.jar"
            "${{ steps.vars.outputs.artifact_id }}-${{ steps.vars.outputs.version }}.pom"
          )

          cd "${{ steps.vars.outputs.target_path }}"
          for file in "${FILES[@]}"; do
            gpg --batch --yes --armor --pinentry-mode loopback \
              --passphrase "${{ secrets.GPG_PASSPHRASE }}" \
              --output "$file.asc" --detach-sign "$file"

            md5sum "$file" | cut -d ' ' -f 1 > "$file.md5"
            sha1sum "$file" | cut -d ' ' -f 1 > "$file.sha1"
          done

      - name: Create zip bundle
        run: |
          cd "${{ steps.vars.outputs.group_path }}"
          zip -r ../../central-bundle.zip .

      - name: Upload to Maven Central
        uses: actions/upload-artifact@v4
        with:
          name: central-bundle
          path: central-bundle.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "Release ${{ steps.vars.outputs.version }}"
          tag_name: "v${{ steps.vars.outputs.version }}"
          files: central-bundle.zip
